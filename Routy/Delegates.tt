<#@ include file="Common.txt" once="true" #>
using System;
using System.Collections.Generic;
using System.Collections.Specialized;

namespace Routy;

// RequestHandler
public delegate TResult RequestHandler<in TContext, out TResult>(string httpMethod, Uri uri, TContext context);

// Functional value extractor
public delegate T ValueExtractor<in TContext, out T>(TContext context, NameValueCollection parameters);

// Value parser
public delegate TErr Parser<TRes, out TErr>(string source, out TRes result);

// Functional mutator
public delegate T Mutator<T>(T t);

#region Parameter collector fillers

<#foreach (var pc in paramCountRange){#>
public delegate ParameterCollector<TContext<#=F(pc, "TQ_", true)#>, TResult, TController> ParameterCollectorFiller<TContext<#=F(pc, "TQ_", true)#>, TResult, TController>(ParameterCollector<TContext, TResult, TController> parameterCollector);
<#}#>

#endregion

#region Middle handlers

<#foreach (var pc in paramCountRange){#>
public delegate TResult ResourceCollectorHandler<in TContext<#=F(pc, "in TP_", true)#>, out TResult>(string httpMethod, ICollection<string> urlSegments, NameValueCollection queryParameters, TContext context<#=F(pc, "TP_ tp_", true)#>);
<#}#>

<#foreach (var pc in paramCountRange){#>
public delegate TResult HttpMethodCollectorHandler<in TContext<#=F(pc, "in TP_", true)#>, out TResult>(string httpMethod, NameValueCollection query, TContext context<#=F(pc, "TP_ tp_", true)#>);
<#}#>

<#foreach (var pc in paramCountRange){#>
public delegate TResult ParameterCollectorHandler<in TContext<#=F(pc, "in TP_", true)#>, out TResult>(NameValueCollection query, TContext context<#=F(pc, "TP_ tp_", true)#>);
<#}#>

#endregion
